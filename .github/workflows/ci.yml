# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches: ['**']
    tags: ['v*']
  pull_request:
    branches: [main]

env:
  ECR_REGISTRY: 640168440704.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: howard-test

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          # 如果有測試文件的話執行
          # pytest tests/

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    outputs:
      image-tag: ${{ steps.image-tag.outputs.tag }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::640168440704:role/GitHubActionsPushToECR
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate image tag
        id: image-tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            TAG="staging-${GITHUB_SHA::8}"
          else
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            BRANCH_NAME=${BRANCH_NAME//\//-}
            TAG="dev-${BRANCH_NAME}-${GITHUB_SHA::8}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        run: |
          IMAGE_TAG=${{ steps.image-tag.outputs.tag }}
          echo "Building image with tag: $IMAGE_TAG"
          
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
          # Also tag as latest for the respective environment
          if [[ "$IMAGE_TAG" == staging-* ]]; then
            docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:staging-latest
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:staging-latest
          elif [[ "$IMAGE_TAG" == v* ]]; then
            docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:production-latest
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:production-latest
          else
            docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:dev-latest
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:dev-latest
          fi
